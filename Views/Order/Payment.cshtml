@model ShoppingCart_Application_MVC.Models.ProfileCombineViewModel

@{
    ViewBag.Title = "Payment";
}

@*<script src="~/Assets/js/Countries.js" defer></script>
<script src="~/Assets/js/States.js" defer></script>*@


<style>

    .btn {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif !important;
        font-size: 15px !important;
        font-weight: 500;
    }

    .btn-light {
        color: #0000009b;
    }

    .icon-hover-primary:hover {
        border-color: #3b71ca !important;
        background-color: white !important;
    }

        .icon-hover-primary:hover i {
            /*color: #3b71ca !important;*/
        }

    .icon-hover-danger {
        font-family: 'Segoe UI',sans-serif !important;
        font-size: 1em;
    }

        .icon-hover-danger:hover {
            border-color: #dc4c64 !important;
            background-color: white !important;
        }

            .icon-hover-danger:hover i {
                color: #dc4c64 !important;
            }

    /* input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            margin: 0;
        }*/

    input, textarea {
        min-width: 100% !important;
    }
</style>

@if (Model.PaymentAmounts == null)
{
    <script>
        window.location.href = '@Url.Action("AddToCart", "Cart")';
    </script>
}
else
{

    <script>
    function formatPrice(price) {
        return '₹' + price.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
    }

    document.addEventListener('DOMContentLoaded', function () {

            var price = @Model.PaymentAmounts.Price;
            var items = @Model.PaymentAmounts.Items;
            var discountAmount = @Model.PaymentAmounts.DiscountAmount;
            var deliveryCharges = @Model.PaymentAmounts.DeliveryCharges;
            var totalAmount = @Model.PaymentAmounts.TotalAmount;

            // Example usage:
            document.getElementById('finalPrice').innerText = formatPrice(price);
            document.getElementById('items').innerText = items;
            document.getElementById('discountAmount').innerText = '- ' + formatPrice(discountAmount);

            if (deliveryCharges > 0) {
                document.getElementById('deliveryCharges').innerText = formatPrice(deliveryCharges);
                document.getElementById('freeDelivery').style.display = 'none';
            } else {
                document.getElementById('deliveryCharges').style.display = 'none';
            }

            document.getElementById('grandTotal').innerText = formatPrice(totalAmount);
            document.getElementById('amountPay').innerText = formatPrice(totalAmount);
    });

    </script>


    <main>
        <section class="row">
            <div class="container-fluid">
                <section class="my-2">
                    <div class="container ct-1">
                        <div class="row">
                            <div class="col-lg-9  my-2">
                                <div class="card border shadow-0">
                                    <div class=" m-2 m-sm-4">
                                        <div class="">
                                            <h4 class="mb-3">Billing address</h4>
                                            <hr class="mb-4" />
                                            <form class="needs-validation" novalidate="">

                                                <div class="row mb-1">
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="firstName">First name</label>
                                                        <input type="text" class="form-control" id="firstName" placeholder="" value="@Model.UpdateAddress.FirstName" required="">
                                                    </div>
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="lastName">Last name</label>
                                                        <input type="text" class="form-control" id="lastName" placeholder="" value="@Model.UpdateAddress.LastName" required="">
                                                    </div>
                                                </div>

                                                <div class="row mb-1">
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="email">Email <span class="text-muted">(Optional)</span></label>
                                                        <input type="email" class="form-control" id="email" value="@Model.UpdateAddress.Email" placeholder="you@example.com">
                                                    </div>

                                                    <div class="col-md-4 col-sm-6">
                                                        <label for="phone">Phone </label>
                                                        <input type="tel" class="form-control" id="phone" value="@Model.UpdateAddress.Phone">
                                                    </div>
                                                </div>

                                                <div class="row mb-1">
                                                    <div class="col-md-8  mb-3">
                                                        <label for="address">Address</label>
                                                        <textarea class="form-control" rows="1" id="address" placeholder="1234 Main St" value="" required="">@Model.UpdateAddress.Address</textarea>
                                                    </div>
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="lankdmark">Landmark <span class="text-muted">(Optional)</span></label>
                                                        <input type="text" class="form-control" id="lankdmark" value="@Model.UpdateAddress.Landmark" placeholder="">
                                                    </div>
                                                </div>

                                                <div class="row mb-1">
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="houseno">House No. <span class="text-muted">(Optional)</span></label>
                                                        <input type="text" class="form-control" id="houseno" value="@Model.UpdateAddress.HouseNo">
                                                    </div>

                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="country">Country</label>
                                                        <select class="custom-select d-block w-100" id="country" required="">
                                                            <option value="" selected>Choose...</option>
                                                        </select>
                                                    </div>
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="state">State</label>
                                                        <select class="custom-select d-block w-100" id="state" required="">
                                                            <option value="" selected>Choose...</option>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="row mb-1">
                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="city">City</label>
                                                        <input type="text" class="form-control" id="city" value="@Model.UpdateAddress.City" required="">
                                                    </div>

                                                    <div class="col-md-4 col-sm-6 mb-3">
                                                        <label for="pincode">Pin Code</label>
                                                        <input type="text" class="form-control" id="pincode" value="@Model.UpdateAddress.Pincode" placeholder="" required="">
                                                    </div>
                                                </div>

                                                <hr class="mb-4">
                                                @*<div class="custom-control custom-checkbox">
                <input type="checkbox" class="custom-control-input" id="same-address">
                <label class="custom-control-label" for="same-address">Shipping address is the same as my billing address</label>
            </div>*@
                                                <div class="custom-control custom-checkbox">
                                                    <input type="checkbox" checked class="custom-control-input" id="save-info">
                                                    <label class="custom-control-label" for="save-info">Save this information for next time</label>
                                                </div>
                                                <hr class="mb-4">
                                                <h4 class="mb-3">Payment</h4>
                                                <div class="d-block my-3">
                                                    <div class="custom-control custom-radio mb-1">
                                                        <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" checked="" required="">
                                                        <label class="custom-control-label" for="credit">Credit / Debit / ATM Card</label>
                                                    </div>
                                                    <div class="custom-control custom-radio">
                                                        <input id="cod" name="paymentMethod" type="radio" class="custom-control-input" required="">
                                                        <label class="custom-control-label" for="cod">Cash on delivery</label>
                                                    </div>
                                                </div>
                                                <div id="card-options" class="pt-3 pb-1">
                                                    <div class="row mb-1">
                                                        <div class="col-md-4 col-sm-6 mb-3">
                                                            <label for="cc-name">Name on card</label>
                                                            <input type="text" class="form-control" id="cc-name" placeholder="" required="">
                                                            <small class="text-muted">Full name as displayed on card</small>
                                                        </div>
                                                        <div class="col-md-4 col-sm-6 mb-3">
                                                            <label for="cc-number">Card number</label>
                                                            <input type="text" class="form-control" id="cc-number" placeholder="" required="">
                                                        </div>
                                                    </div>
                                                    <div class="row mb-1">
                                                        <div class="col-md-4 col-sm-6 mb-3">
                                                            <label for="cc-expiration">Expiration</label>
                                                            <input type="text" class="form-control" id="cc-expiration" placeholder="MM/YY" required="">
                                                        </div>
                                                        <div class="col-md-4 col-sm-6 mb-3">
                                                            <label for="cc-cvv">CVV</label>
                                                            <input type="text" class="form-control" id="cc-cvv" placeholder="" required="">
                                                        </div>
                                                    </div>
                                                </div>
                                                <hr class="mb-4">
                                                <button id="pay-button"  class="btn btn-primary w-100 m-0" type="submit" style="display: none;">
                                                    Pay
                                                    <span class="mb-2 fw-semibold" id="amountPay">₹0.00</span>
                                                </button>
                                                <button id="checkout-button" class="btn btn-primary w-100 m-0" type="submit">Continue to checkout</button>
                                            </form>
                                        </div>
                                    </div>
                                    <div class="border-top pt-4 mx-4 mb-4">
                                        <p><i class="fas fa-truck text-muted fa-lg"></i> Free Delivery within 1-2 weeks</p>
                                        <p class="text-muted">
                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 my-2">
                                <div class="card mb-3 border shadow-0">
                                    <div class="card-body">
                                        <form>
                                            <div class="form-group w-100">
                                                <label class="form-label">Have coupon?</label>
                                                <div class="input-group d-flex justify-content-center align-items-center text-center">
                                                    <input type="text" class="form-control border" name="" placeholder="Coupon code" style="height:2.2rem;min-width:min-content !important" />
                                                    <button class="btn btn-light border" style="height:2.2rem">Apply</button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="card shadow-0 border">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between">
                                            <p class="mb-2">Price (<span id="items">0</span> Items):</p>
                                            <p class="mb-2" id="finalPrice">₹0.00</p>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <p class="mb-2">Discount:</p>
                                            <p class="mb-2 text-success" id="discountAmount">-₹0.00</p>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <p class="mb-2">Delivery Charges:</p>
                                            <p class="mb-2 text-success" id="deliveryCharges">₹0.00</p>
                                            <p class="mb-2 text-success" id="freeDelivery">Free</p>
                                        </div>
                                        <hr />
                                        <div class="d-flex justify-content-between">
                                            <p class="mb-2 fw-semibold">Amount Payable:</p>
                                            <p class="mb-2 fw-semibold" id="grandTotal">₹0.00</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </section>
    </main>


    <script type="module">

    // load states and countries dynamically
    document.addEventListener('DOMContentLoaded', function () {
        // Import both JS files
        Promise.all([
            import('/Assets/js/Countries.js'),
            import('/Assets/js/States.js')
        ]).then(([countriesModule, statesModule]) => {
            const countries = countriesModule.countries;
            const states = statesModule.states;

            // Populate the country select element
            const countrySelect = document.getElementById('country');
            countries.forEach(country => {
                const option = document.createElement('option');
                option.value = country.CountryID; // Use CountryID
                option.textContent = country.CountryName; // Use CountryName
                if (country.CountryID === 101) { // Set default country to India
                    option.selected = true;
                }
                countrySelect.appendChild(option);
            });

            // Populate the state select element based on selected country
            const stateSelect = document.getElementById('state');
            countrySelect.addEventListener('change', function () {
                const selectedCountryId = parseInt(this.value, 10);
                stateSelect.innerHTML = '<option value="" selected>Choose...</option>'; // Reset state options

                // Filter states by the selected country ID
                const filteredStates = states.filter(state => state.CountryID === selectedCountryId);
                filteredStates.forEach(state => {
                    const option = document.createElement('option');
                    option.value = state.StateID; // Use StateID
                    option.textContent = state.StateName; // Use StateName
                    stateSelect.appendChild(option);
                });
            });

            // Trigger the change event on page load to populate the states for the default country
            countrySelect.dispatchEvent(new Event('change'));
        }).catch(error => {
            console.error('Error loading modules:', error);
        });
    });

    document.querySelector('form').addEventListener('submit', function (event) {
        var paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').id;

        if (paymentMethod === 'cod') {
            // Ensure card details are not submitted
            document.querySelectorAll('#card-options input').forEach(input => {
                input.value = ''; // Clear card details
            });
        }
    });


    document.addEventListener('DOMContentLoaded', function () {
        var creditOption = document.getElementById('credit');
        var codOption = document.getElementById('cod');
        var cardOptions = document.getElementById('card-options');
        var payButton = document.getElementById('pay-button');
        var checkoutButton = document.getElementById('checkout-button');
        var cardInputs = document.querySelectorAll('#card-options input');

        function toggleCardOptions() {
            if (creditOption.checked) {
                cardOptions.style.display = 'block';
                payButton.style.display = 'block';
                checkoutButton.style.display = 'none';
                cardInputs.forEach(input => input.removeAttribute('disabled'));
            } else {
                cardOptions.style.display = 'none';
                payButton.style.display = 'none';
                checkoutButton.style.display = 'block';
                cardInputs.forEach(input => input.setAttribute('disabled', 'true'));
            }
        }

        toggleCardOptions();

        creditOption.addEventListener('change', toggleCardOptions);
        codOption.addEventListener('change', toggleCardOptions);
    });


    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'

          // Get the TempData value from the server-side
            var isSuccess = '@TempData["isSuccess"]';

        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation')

            // Loop over them and prevent submission
            Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault()
                        event.stopPropagation()
                    } else {
                        // Check which button was clicked and navigate accordingly
                        event.preventDefault(); // Prevent the form from submitting
                        if (document.activeElement.id === 'pay-button') {
                            if (isSuccess) {
                                window.location.href = '/Order/Success';
                            } else {
                                window.location.href = '/Order/Payment';
                            }
                        } else if (document.activeElement.id === 'checkout-button') {
                            if (isSuccess) {
                                window.location.href = '/Order/Success';
                            } else {
                                window.location.href = '/Order/Payment';
                            }
                        }
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        }, false)
    }())

    // Event listener for Phone input
    document.getElementById('phone').addEventListener('input', function (e) {
        // Remove all non-digit characters
        e.target.value = e.target.value.replace(/\D/g, '');

        // Limit to 10 characters
        if (e.target.value.length > 10) {
            e.target.value = e.target.value.slice(0, 10);
        }
    });

        // Ensure pincode is exactly 6 digits if the length is 6
        document.getElementById('pincode').addEventListener('input', function (e) {
            var value = e.target.value.replace(/\D/g, ''); // Remove non-digits
            if (value.length <= 6) {
                e.target.value = value; // Allow up to 6 digits
            }
        });

        // Format credit card number with spaces and allow input if less than 14 digits
        document.getElementById('cc-number').addEventListener('input', function (e) {
            var target = e.target;
            var value = target.value.replace(/\D/g, ''); // Remove non-digits

            if (value.length >= 14) {
                var formattedValue = value.replace(/(\d{4})(?=\d)/g, '$1 '); // Add spaces every 4 digits
                if (formattedValue.replace(/\s/g, '').length > 16) {
                    formattedValue = formattedValue.slice(0, 19); // Limit to 16 digits + 3 spaces
                }
                target.value = formattedValue;
            } else {
                target.value = value; // Allow input if less than 14 digits
            }
        });

        // Ensure expiration date is in MM/YY format and requires both month and year
        document.getElementById('cc-expiration').addEventListener('input', function (e) {
            var value = e.target.value.replace(/\D/g, ''); // Remove non-digits
            var month = value.substring(0, 2);
            var year = value.substring(2, 4);

            if (month.length === 2 && year.length === 2) {
                // Ensure month is valid (01 to 12)
                if (month > 12) month = '12';
                if (month.length === 1) month = '0' + month;
                e.target.value = month + ' / ' + year; // Format as MM / YY
            } else if (month.length === 2) {
                e.target.value = month + ' / '; // Show month and space for year
            } else {
                e.target.value = month; // Show only month
            }
        });

        // Limit CVV to exactly 3 digits if more than 3 digits are entered
        document.getElementById('cc-cvv').addEventListener('input', function (e) {
            var value = e.target.value.replace(/\D/g, ''); // Remove non-digits
            if (value.length <= 3) {
                e.target.value = value; // Allow input if less than or equal to 3 digits
            } else {
                e.target.value = value.slice(0, 3); // Limit to 3 digits
            }
        });

    </script>

}

